算法介绍
================

持续更新中...

简介
----------------
Sentry2视觉传感器集成有多种离线视觉算法，无需网络即可识别物体。

视觉基础
----------------

* 图像检测
    判断画面中是否有某一类目标物体，而不区分这个物体具体内容是什么。比如检测人脸，只需要判断画面中有人脸即可，而无需知道这个人是谁。

* 图像识别
    不仅要判断画面中是否有某一类目标物体，还要对这个物体具体的内容进行识别。比如在检测到人脸之后，还需要判断出这个人脸是谁。

* 分类标签
    对于具有物体识别功能的算法，需要用一个数字来标记不同的物体，这个数字即为分类标签：Label。
    
    对于不同的算法，即便具有相同的数字，其所代表的含义也是不同的，比如在颜色识别算法中用数字1代表*黑色*，而在20分类算法中用数字1代表*飞机*。

* 像素
    每一幅画面都是由各种颜色的”点“按一定的规则排列而成的，这些点称之为像素。颜色可以通过三原色来表示，对于图像而言，其三原色为红色Red，绿色Green，蓝色Blue。

    每个像素的颜色就是由不同深浅的R、G、B三种颜色组成的。每个通道颜色的深浅可以称之为该通道的亮度，可以由一个字节的数据来表示，其范围为0～255,其中0为最暗，255为最亮。
    
    当RGB三个通道都为0时最暗，表现出来的就是黑色，反之都为255时最亮，表现出来就是白色。

* 图像坐标系
    图像默认的分辨率为320×240像素，规定图像的左上角为坐标原点（0,0），水平方向为X轴，自左向右数值从0递增至319，总像素为320个，垂直方向为Y轴，自上向下数值从0递增至239，总像素为240个。
    图像中的每个像素位置可以由一组x-y坐标表示，比如（160,120）为图像中心点位置。如果一个物体的中心点坐标为（50,120），表明这个物体位于图像画面中偏左的方位，
    再比如，一个物体的坐标为（200,50），那么这个物体位于右上方的位置。

    Sentry2还提供了百分比坐标系，将水平方向和垂直方向量化至0～100的范围内，即100等分，返回坐标是相对满量程的值。百分比坐标系的图像中点为（50,50），即水平方向50%的位置和垂直方向50%的位置。
    
    **注意**：百分比坐标系下想表示一个正方形，其宽w和高h是不相等的，而是符合3：4的关系。比如，如果正方形的宽w为12%,那么其对应的高度h应该为12/3×4=16%

* 目标物体标记方法
    当检测到物体后，需要按照某种方式来标记目标物体，通常采用矩形框标记法和顶点标记法。
    
    **矩形框标记法**:
        该方法会提供四个参数，分别为目标物体的中心点水平坐标x，中心点垂直坐标y，物体的水平宽度w，物体的垂直高度h。
        通过这4个参数就可以将物体在画面中的方位和大小标记出来。大部分算法都采用此类标记法。

    **顶点标记法**：
        该方法会提供1个或多个端点的x-y坐标，用于标记一个或多个端点。
        比如在线条检测算法中，每组处理结果的2个端点可以确定一条直线，可以推算出其方向和大小。

* KPU类算法与CPU类算法
    Sentry2中的图像算法分为两种类型，一种是基于神经网络硬件加速器KPU的，另一种是只通过CPU执行运算的。
    
    **KPU算法**：
        该类算法在运行前需要先从Flash中加载算法模型文件，然后经KPU进行加速运算处理后，再由CPU做后续处理。
        由于芯片KPU单元硬件设计架构的原因，同一时间内KPU加速器只能运行一个模型文件，又由于内存资源有限，一般情况下无法同时加载多个模型文件。
        所以视觉传感器对于KPU类算法无法同时开启，但可以与CPU类算法同时开启，如果当前已经在运行KPU算法，那么新指定的KPU算法不会被开启，除非旧的KPU算法被关闭掉。

    **CPU算法**：
        该类算法由CPU指令运算即可实现，无需KPU加速器，也无需加载模型文件，此类算法可以与KPU共同执行，可以同时开启与运算。

* 数码变焦
    Sentry2具有数码变焦功能，可以实现对图像视野的缩放，用于看清远处的物体。数码变焦用Zoom来表示，提供了1～5档的变焦选项（不同型号的摄像头变焦范围可能会有差异）。
    Zoom1为原始视野，视野内的前后距离比较近，但视野宽度广，对于快速移动的物体可以进行很好的跟踪。
    随着Zoom值的增大，可以看清更远处的物体，但视野范围会缩窄，如果物体移动比较快，则容易跑到视野外面。


算法介绍
----------------

算法列表
************************

================    ================    ================    ================
算法ID               名称                 英文名称             简介
================    ================    ================    ================
1                    颜色识别             Color               设置1～25个识别区域，返回每个区域中的颜色信息，如R，G，B值及分类标签
2                    色块检测             Blob                检测图像中是否包含一个或多个指定颜色的色块，返回其坐标和尺寸，可以通过设置色块尺寸用于滤除干扰
3                    标签识别             Apriltag            检测图像中是否有Apriltag图案，目前支持16H5，25H9,36H11编码，可以同时识别多个图案
4                    线条检测             Line                检测图像中的实心线条，返回线段的两个端点坐标及倾斜角度，曲线将被近似为直线段处理，可支持5个线段检测
5                    深度学习             Learning            对任意物体进行离线训练并进行识别
6                    卡片识别             Card                识别特制的卡片图案，10张交通卡片，9张形状卡片，10张数字卡片
7                    人脸识别             Face                检测与识别人脸，可以通过短按导航键来记录人脸数据，已记录的人脸将会分配一个Label标签用于分类
8                    20类物体             20Class             实现对20类常见物体的识别，诸如猫、椅子、人、汽车、电视等
9                    二维码               QrCode              识别简单的二维码，可自定义生成，但应符合以下条件：由基本ASCII码字符组成，不超过25个字符，白底黑格图案
11                   运动物体             Motion              判断图像中是否有移动区域，如果有，返回该区域的坐标和大小，传感器需处于静止状态，自身不可移动
================    ================    ================    ================


算法详解
************************

ID:1 颜色识别-Color
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

* 算法简介
    .. image:: images/sentry2_vision_color_selecting.png

    用户指定一个或多个识别区域，识别该区域的颜色分类。每个检测位置称为一个识别区域，其位置和大小由用户进行设置，最多25组识别区域，返回该区域的颜色标签信息和实际的红R、绿G、蓝B数值。

* 颜色分类标签
    Sentry2定义了7种颜色分类标签：

    .. image:: images/sentry2_vision_label.png

    ================    ================    ================    ================    ================    ================
    分类标签              英文标识             中文含义              分类标签             英文标识             中文含义
    ================    ================    ================    ================    ================    ================
    1                    Black               黑色                2                    White              白色
    3                    Red                 红色                4                    Green              绿色                
    5                    Blue                蓝色                6                    Yellow             黄色
    0                    Unknown             未知
    ================    ================    ================    ================    ================    ================

    **注意**：由于紫色、青色（蓝绿色）、橙色、灰色等，相对来说容易造成误报，因此这几个颜色部分区间被划分为临近颜色的标签，部分被划分为未知颜色，如果用户确实有这几种颜色的使用需求，可以通过返回参数的R、G、B实际值自行计算与判断

* 配置参数

    用户需要指定识别区域的坐标和大小，最多可设置25个识别区域，如果没有指定，则默认为图像中心点

    当通过主控设置寄存器参数时，每个识别区域都需要设置以下参数：

    ================    ================================
    参数                 含义
    ================    ================================
    1                   识别区域中心x坐标
    2                   识别区域中心y坐标
    3                   识别区域宽度w
    4                   识别区域高度h
    5                   无
    ================    ================================

    .. image:: images/sentry2_vision_color_setting.png

    在UI设置页面中，有几种预置的识别区域网格分布形式和识别区域大小：

    网格（水平方向数量 x 垂直方向数量）：1x1、2x2、3x3、4x4、5x5、1x10、2x10、6x1、6x2

    识别区域大小（水平方向像素 x 垂直方向像素）：2x2、4x4、8x8、16x16、32x32

    **注意**：百分比坐标系下想表示一个正方形，其宽w和高h是不相等的，而是符合3：4的关系。比如，如果正方形的宽w为12%,那么其对应的高度h应该为12/3×4=16%

    百分比坐标系下，预设的识别区域大小（水平方向百分比 x 垂直方向百分比）：1x1、2x3、3x4、6x8、9x12

* 返回结果

    .. image:: images/sentry2_vision_color_running.png

    识别到颜色后，UI界面上的识别区域将会变为其对应颜色的方框，如果是未知颜色，则会显示一个四角框

    当通过主控读取寄存器时，将会返回以下的数据：

    ================    ================================
    结果                 含义
    ================    ================================
    1                   R，红色值，范围 0～255
    2                   G，绿色值，范围 0～255
    3                   B，蓝色值，范围 0～255
    4                   无
    5                   颜色分类标签
    ================    ================================

* 使用技巧
    1. 由于是对像素进行统计处理，当识别区域较多且较大时，处理速度会相应的变慢，反之则会比较快速。
    2. 当识别区域窗口较小时（比如2x2），可以识别较小的色块，处理速度快，但统计样本太少，容易被干扰，可信度较低，适合于背景单一可控的环境。
    3. 当识别区域窗口较大时（比如32x32），统计样本多，即便出现若干的杂色也会被滤除，具有较高的可信度，但处理速度会变慢，当识别区域处于2种颜色的边界时，颜色可能会经常跳变。
    4. 当画面存在偏色时，需要锁定白平衡功能

* 应用案例
    1. 颜色识别算法基础应用


    2. 单色物体分捡系统
        对于具有单个颜色的物体，例如不同颜色的乐高积木，可以利用该算法进行分类处理。
        当传送带上的乐高积木逐一经过检测区域时，传感器会识别其颜色，并控制舵机将乐高积木分捡到不同的区域中。

    3. 基于颜色识别的无人驾驶小车
        对于背景为白色，道路为黑色边界或直线的道路地图，可以设置多个识别区域进行视觉巡线，适合单线驾驶，或模拟道路驾驶（双边界）。
        其原理类似于灰度传感器，对于单线驾驶而言，正常跟踪黑色线路行驶时，中心点检测区域应始终为黑色。
        当识别区域未检测到黑色时，则说明偏离了道路，至于是左偏还是右偏，则需要依靠中心两侧的检测区域来判断。
        对于模拟道路驾驶，其判断逻辑与上述逻辑正好相反，当两侧或顶部的识别区域变黑时，则说明碰触到了道路的边界，需要调整小车子的角度。

    4. 4x4矩阵二维码识别
        设置一个4x4的检测矩阵，共有16个识别区域，可以检测一个由黑白图案构成的示意性的二维码。
        该二维码共4行，每行4位数据，每位数据中由黑色代表1,白色代表0，则每行可以生成一个16进制数字0～F，于是每个二维码可以生成一个4个16进制的指令码。
        利用该指令码可以控制灯光或门锁等操作，由主控控制，这个应用需要对准角度。

    5. 5x5像素图案识别
        设置一个5x5的检测矩阵，共有25个识别区域，可以识别一个由乐高积木搭建的平面图案。
        用乐高积木拼搭一个平面的5x5像素图案，比如一个爱心，笑脸，或是箭头图案，可以参考micro-bit的那些屏幕显示的小图标。当然，这个算法是可以支持单色图案或着彩色图案的。
        这25个识别区域会生成一串标签值，每个图案也会有一个固定的标签值，两者想匹配则识别成功，当然需要对准角度才行。
    
    6. 图案扫描仪
        设置一排多点识别区域，比如16个点。将传感器自上而下匀速的扫描一幅图画，扫描完成后便会生成多行的颜色数据，行数与扫描间隔相关，每行颜色有16个点。
        于是便可以控制点阵屏显示这个图案或者控制机械臂进行绘制。

    7. 纸质音乐键盘识别
        设置一行8个识别区域，打印一张黑白格子的键盘纸，并对准传感器上的这个8个识别区域。
        在没有按下时，识别颜色应该为黑色，当手指按下时，则会检测到非黑色，并播放对应的音符。

ID:2 色块检测-Blob
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

* 算法简介

    .. image:: images/sentry2_vision_blob_selecting.png

    用户指定检测一个或多个颜色，判断图像中是否有该颜色的色块，返回其坐标和大小，支持多颜色多色块检测，颜色分类标签与颜色识别中的定义相同。

* 配置参数

    用户需要指定待检测的颜色标签，最多可同时开启全部6种颜色检测，但速度会有所下降。用户还可以通过设置色块的最小宽度w和高度h来过滤那些小于该值的色块，以减少误报。

    当通过主控设置寄存器时，有以下参数需要设置：

    ================    ================================
    参数                 含义
    ================    ================================
    1                   无
    2                   无
    3                   有效色块最小宽度w
    4                   有效色块最小高度h
    5                   待检测的颜色分类标签
    ================    ================================

    .. image:: images/sentry2_vision_blob_setting.png

    在UI界面中，有几种预置的参数可以使用：
        算法性能：
            根据不同的应用需求来选择合适能算法性能，有3个选项可以设置，分别为“灵敏”、“均衡”、“准确”
            
            在灵敏模式下识别速度快，帧率高。准确模式下可以检测远处的色块，但速度会降低。默认为均衡性能

        同时检测的最大数量：
            单个颜色的最大检测数量支持1～5个的输出
            
            当设置为1时，只返回一个最优结果，如果图像中有多个色块，则返回最大的那个，如果大小相近，则优先返回左上角的那个
            
            当设置大于1时，返回色块的数量不会超过这个值。

        最小色块的区域大小：
            如果背景中存在相同颜色的小色块，可以通过合理的设置最小值实现过滤功能
            
            绝对值坐标系下的预设值为：2x2、4x4、8x8、16x16、32x32、64x64、128x128像素

            百分比坐标系下的预设值为：1x1、2x3、3x4、6x8、9x12、21x28、42x56 %

        待检测的颜色：
            以按键形式提供用户选择，开启某个颜色后会显示一个小眼睛图标，未开启的颜色则会显示一个带斜杠的眼睛图标，可以同时开启一个或多种颜色

* 返回结果

    .. image:: images/sentry2_vision_blob_running.png

    识别到指定色块后会在UI界面上进行标识，显示其位置、大小、分类标签、名称等信息

    当通过主控读取寄存器时，将会返回以下的数据：
    
    ================    ================================
    结果                 含义
    ================    ================================
    1                   色块中心x坐标
    2                   色块中心y坐标
    3                   色块宽度w
    4                   色块高度h
    5                   颜色分类标签
    ================    ================================

* 使用技巧
    1. 当确定需要跟踪一个物体时，比如检测白色的道路或是跟踪小球，可以将色块数量设置为1，可以提高速度，减少误报
    2. 采用较小的识别区域并使用准确性能模式，可以看到更远处的物体
    3. 识别大面积的色块时，运行帧率会明显下降，此时可以用灵敏模式
    4. 当画面存在偏色时，需要锁定白平衡功能

* 应用案例
    1. 色块检测算法基础应用

    2. 单色物体跟踪
        可以利用色块检测去跟踪那些具有单个颜色属性的物体，比如黄色的香蕉、红色的小球等。
        当背景颜色与目标物体颜色不同时，可以很好的对目标物体进行检测。
    3. 基于色块检测的无人驾驶小车
        对于白色路面，黑色边界的道路，可以通过检测白色色块来实现对白色道路的巡线功能。
        当道路位于正前方时，色块位置也位于水平中间方位，当道路左转时，色块位置也会偏左，右转时偏右。

    4. 红绿灯识别
    5. 物体大小分类器

ID:3 标签识别-Apriltag
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

* 算法简介

    .. image:: images/sentry2_vision_apriltag_selecting.png

    判断图像中是否有Apriltag标签图案，目前支持16H5，25H9，36H11的编码形式，算法运行时需要先指定用哪一种解码方式，不同的编码形式不可以同时检测，但同一种编码可同时检测25个标签。

    **注意**：该算法不可以与其他带*号的算法同时运行

    **分类标签**

    .. image:: images/sentry2_vision_apriltag_family.png

    apriltag标签为一组已经定义好的黑白方块图案，不同的编码形式使用的方块数量是不同的。每个图案都有一个预定义的分类标签值，识别后会返回该值。

    `Apriltag图案下载 <https://github.com/AprilRobotics/apriltag-imgs/tree/master>`

* 配置参数
    .. image:: images/sentry2_vision_apriltag_setting.png

    UI界面中可以设置算法性能和编码形式

        算法性能：
            根据不同的应用需求来选择合适能算法性能，有3个选项可以设置，分别为“灵敏”、“均衡”、“准确”
            
            在灵敏模式下识别速度快，帧率高。准确模式下可以检测远处的标签，但速度会降低。默认为均衡性能

        编码形式：
            当点击按钮时，会循环切换“16H5”，“25H9”，“36H11”三种编码模式，切换后需要重启算法，下次启动时生效


* 返回结果
    .. image:: images/sentry2_vision_apriltag_running.png

    识别到标签后会返回其坐标、大小和标签编号

    当通过主控读取寄存器时，将会返回以下的数据：

    ================    ================================
    结果                 含义
    ================    ================================
    1                   标签中心x坐标
    2                   标签中心y坐标
    3                   标签宽度w
    4                   标签高度h
    5                   标签编号
    ================    ================================

* 使用技巧
    1. 所识别到的标签宽度和高度具有较稳定的输出，可以利用这一点进行距离判断，标签旋转后不会改变其大小，但倾斜时可能会有影响
    2. 当需要识别多个标签时，可以关闭坐标线的显示，看起来比较简洁
    3. 标签越大，识别的距离就越远

* 应用案例
    1. Apriltag算法基础应用
    2. 物体跟踪
    3. 物体定位
    4. 物体测距

ID:4 线条检测-Line
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

* 算法简介

    .. image:: images/sentry2_vision_line_selecting.png

    检测图像中是否有线条，如果有则会返回线条的两个端点和倾斜角度，最多可同时检测5个线段，如果为曲线，则会返回近似的直线段
    
* 配置参数

    .. image:: images/sentry2_vision_line_setting.png

    UI界面中可以设置算法性能

        算法性能：
            根据不同的应用需求来选择合适能算法性能，有3个选项可以设置，分别为“灵敏”、“均衡”、“准确”
            
            灵敏模式下会对小线段更为敏感，准确模式下会忽略较小的线段，默认为均衡模式

* 返回结果

    .. image:: images/sentry2_vision_line_running_01.png

    检测到线条后会返回其两个端点和倾斜角度

    **注意**：水平向右为0度，逆时针增大，垂直向上为90度，水平向左为180度，一般不会向下检测输出角度

    .. image:: images/sentry2_vision_line_running_02.png

    最多可同时可检测5个线段，为便于UI界面上进行区分，按结果顺序依次用“红、黄、绿、蓝、紫”五种颜色进行标记

    当通过主控读取寄存器时，将会返回以下的数据：

    ================    ================================
    结果                 含义
    ================    ================================
    1                   线段起点x坐标
    2                   线段起点y坐标
    3                   线段终点x坐标
    4                   线段终点y坐标
    5                   线段的倾斜角度
    ================    ================================

* 使用技巧
    1. 背景与线条应清晰分明，比如白底黑线，如果背景杂乱，则可能会检测出背景中的线条
    2. 线条粗细应适中，不可过细，也不可太宽
    3. 一般来说，巡线时，第一条线段始终为屏幕下方先发现的线段，然后是分支线段

* 应用案例
    1. 线条检测算法基础应用
    2. 基于线条检测的无人驾驶小车

ID:5 深度学习-Learning
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

* 算法简介

    .. image:: images/sentry2_vision_learn_selecting.png

    可以对任意物体进行离线学习并识别，目前支持存储10个物体，用户可以对已训练的模型进行重命名，删除操作

* 配置参数

    训练新的物体：
        在运行界面可以训练新的物体，操作方法如下：

        .. image:: images/sentry2_vision_learn_training.png

        新训练物体会自动分配标签值，分配原则是：选择当前可用ID号中最小的那个序号

    删除所有模型：
        在运行界面中，垂直长按摇杆2秒以上，可以删除所有模型数据

        .. image:: images/sentry2_vision_learn_delete_all.png
        

    当通过主控设置寄存器时，可以将参数5写入0来删除对应的模型文件：

    ================    ================================
    参数                 含义
    ================    ================================
    1                   无
    2                   无
    3                   无
    4                   无
    5                   如果当前Param-ID已经存在，写入0后可以删除对应的模型数据
    ================    ================================

    .. image:: images/sentry2_vision_learn_setting.png

    在UI界面中，可以对已训练的模型进行重命名或删除操作


    对模型重命名：
        在UI界面中可以对已训练的物体进行重命名，操作方法如下：

        .. image:: images/sentry2_vision_learn_rename.png

        *注意*：只支持英文的命名方式，不支持其他语言

        *注意*：名称最大支持32个字符，建议不要太长

    删除单个模型：
        在UI界面中可以删除单个模型数据，操作方法如下：

        .. image:: images/sentry2_vision_learn_delete.png

* 返回结果

    .. image:: images/sentry2_vision_learn_running.png

    该算法只支持判断被训练物体是否存在，而不判断其坐标方位等信息，所以识别框为一个固定输出值

    当通过主控读取寄存器时，将会返回以下的数据：

    ================    ================================
    结果                 含义
    ================    ================================
    1                   固定值，160
    2                   固定值，120
    3                   固定值，224
    4                   固定值，224
    5                   训练物体的ID号
    ================    ================================

* 应用案例
    1. 深度学习算法基础应用
    2. 手写数字识别
    3. 交通标志识别


ID:6 卡片识别-Card
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

* 算法简介

    .. image:: images/sentry2_vision_card_selecting.png

    识别图像中是否有指定的卡片图案，返回其卡片坐标、大小、分类标签等信息。包括交通标志类，图形符号类，数字类，其分类标签见下表

    **交通标志**

    ================    ================    ================    ================    ================    ================
    分类标签              英文标识              中文含义             分类标签             英文标识              中文含义
    ================    ================    ================    ================    ================    ================
    1                    Forward             前进                2                   Left                左转
    3                    Right               右转                4                   Turn Around         掉头
    5                    Park                停车                6                   Green               绿灯
    7                    Red                 红灯                8                   Speed 40            限速40
    9                    Speed 60            限速60              10                  Speed 80            限速80
    ================    ================    ================    ================    ================    ================

    **图形符号**

    ================    ================    ================    ================    ================    ================
    分类标签              英文标识              中文含义             分类标签             英文标识              中文含义
    ================    ================    ================    ================    ================    ================
    11                   Check               对号                 12                  Cross              叉号
    13                   Circle              圆形                 14                  Square             方形
    15                   Triangle            三角形               16                  Plus               加号
    17                   Minus               减号                 18                  Divide             除号
    19                   Equal               等于号
    ================    ================    ================    ================    ================    ================

    **数字**

    ================    ================    ================    ================    ================    ================
    分类标签              英文标识              中文含义             分类标签             英文标识              中文含义
    ================    ================    ================    ================    ================    ================
    20                   Num 0               数字0               21                   Num 1              数字1
    22                   Num 2               数字2               23                   Num 3              数字3
    24                   Num 4               数字4               25                   Num 5              数字5
    26                   Num 6               数字6               27                   Num 7              数字7
    28                   Num 8               数字8               29                   Num 9              数字9
    ================    ================    ================    ================    ================    ================

* 配置参数
    无

* 返回结果

    .. image:: images/sentry2_vision_card_running.png

    该算法支持多张卡片同时识别，卡片在30度以内的旋转仍然可以识别，角度旋转过大则无法识别

    当通过主控读取寄存器时，将会返回以下的数据：

    ================    ================================
    结果                 含义
    ================    ================================
    1                   卡片中心x坐标
    2                   卡片中心y坐标
    3                   卡片宽度w
    4                   卡片高度h
    5                   卡片分类标签
    ================    ================================

* 应用案例
    1. 卡片识别算法基础应用
    2. 基于卡片识别的无人驾驶小车
    3. 数学运算
    4. 卡片标记跟踪
    5. 智能物流

ID:7 人脸识别-Face
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

* 算法简介

    .. image:: images/sentry2_vision_face_selecting.png

    检测图像中是否含有人脸，可以通过按键对人脸进行学习训练，当再次检测到该人脸时，返回一个分类标签用于区分是哪个人脸。

* 配置参数

    训练新的人脸：
        在运行界面可以训练新的人脸，操作方法如下：

        .. image:: images/sentry2_vision_face_training.png

        新训练的人脸会自动分配标签值，分配原则是：选择当前可用ID号中最小的那个序号

    删除所有人脸：
        在运行界面中，垂直长按摇杆2秒以上，可以删除所有模型数据        

    当通过主控设置寄存器时，可以将参数5写入0来删除对应的模型文件：

    ================    ================================
    参数                 含义
    ================    ================================
    1                   无
    2                   无
    3                   无
    4                   无
    5                   如果当前Param-ID已经存在，写入0后可以删除对应的模型数据
    ================    ================================

    .. image:: images/sentry2_vision_face_setting.png

    在UI界面中，可以对已训练的模型进行重命名或删除操作，操作方法可参考：算法ID:5 深度学习

* 返回结果

    .. image:: images/sentry2_vision_face_running.png

    该算法支持人脸检测（未训练的人脸）和人脸识别（已训练的人脸）同时运行，检测到未训练的人脸时会显示标签为0，名称为“新人脸”，当检测到已训练的人脸时，会显示相应的标签和存储的名称

    当通过主控读取寄存器时，将会返回以下的数据：

    ================    ================================
    结果                 含义
    ================    ================================
    1                   人脸中心x坐标
    2                   人脸中心y坐标
    3                   人脸宽度w
    4                   人脸高度h
    5                   人脸分类标签
    ================    ================================

* 应用案例
    1. 人脸识别算法基础应用
    2. 智能人脸锁
    3. 智能门禁系统
    4. 智能考勤机
    5. 坐姿检测系统


ID:8 20类物体识别-20Class
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

* 算法简介

    .. image:: images/sentry2_vision_20class_selecting.png

    识别常见的20类物体，返回他们的坐标信息和分类标签，详见下表。

    **图形符号类**

    ================    ================    ================    ================    ================    ================
    分类标签              英文标识              中文含义             分类标签             英文标识              中文含义
    ================    ================    ================    ================    ================    ================
    1                    Airplane            飞机                2                   Bicycle             自行车
    3                    Bird                鸟                  4                   Boat                船
    5                    Bottle              瓶子                6                   Bus                 公交车
    7                    Car                 小汽车              8                    Cat                猫
    9                    Chair               椅子                10                  Cow                 牛
    11                   DiningTable         餐桌                12                  Dog                 狗
    13                   Horse               马                  14                  Motorbike           摩托车
    15                   Person              人                  16                  PottedPlant         盆栽植物
    17                   Sheep               羊                  18                  Sofa                沙发
    19                   Train               火车                20                  Tvmonitor           电视  
    ================    ================    ================    ================    ================    ================

* 配置参数

    .. image:: images/sentry2_vision_20class_setting.png

    UI界面中可以设置算法性能

        算法性能：
            根据不同的应用需求来选择合适能算法性能，有3个选项可以设置，分别为“灵敏”、“均衡”、“准确”
            
            灵敏模式下会更容易识别到物体，但可能误报较高，准确模式下会相对减少误报，默认为均衡模式

* 返回结果
    
    .. image:: images/sentry2_vision_20class_running.png

    当通过主控读取寄存器时，将会返回以下的数据：

    ================    ================================
    结果                 含义
    ================    ================================
    1                   物体中心x坐标
    2                   物体中心y坐标
    3                   物体宽度w
    4                   物体高度h
    5                   物体分类标签
    ================    ================================

* 应用案例
    1. 20分类算法基础应用
    2. 动物卡片识别
    3. 智能物体计数器
    4. 智能物体监控
    5. 道路车辆监控系统
    

ID:9 二维码识别-QrCode
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

* 算法简介

    .. image:: images/sentry2_vision_qrcode_selecting.png

    可以识别一个标准二维码，该二维码可包含最多25个ASCII码字符数据

    **ASCII码对照表**

    ================    ================    ================    ================    ================    ================
    分类标签              ASCII               分类标签             ASCII               分类标签              ASCII
    ================    ================    ================    ================    ================    ================
    32                   空格                 33                  !                   34                  "
    35                   #                   36                  $                   37                  %
    38                   &                   39                  '                   40                  (
    41                   )                   42                  \*                  43                  \+
    44                   ,                   45                  \-                  46                  .
    47                   /                   48                  0                   49                  1
    50                   2                   51                  3                   52                  4
    53                   5                   54                  6                   55                  7
    56                   8                   57                  9                   58                  :
    59                   ;                   60                  <                   61                  =
    62                   >                   63                  ?                   64                  @
    65                   A                   66                  B                   67                  C
    68                   D                   69                  E                   70                  F
    71                   G                   72                  H                   73                  I
    74                   J                   75                  K                   76                  L
    77                   M                   78                  N                   79                  O
    80                   P                   81                  Q                   82                  R
    83                   S                   84                  T                   85                  U
    86                   V                   87                  W                   88                  X
    89                   Y                   90                  Z                   91                  [
    92                   \\                  93                  ]                   94                  ^
    95                   _                   96                  \`                  97                  a
    98                   b                   99                  c                   100                 d
    101                  e                   102                 f                   103                 g
    104                  h                   105                 i                   106                 j
    107                  k                   108                 l                   109                 m
    110                  n                   111                 o                   112                 p
    113                  q                   114                 r                   115                 s
    116                  t                   117                 u                   118                 v
    119                  w                   120                 x                   121                 y
    122                  z                   123                 {                   124                 |
    125                  }                   126                 ~
    ================    ================    ================    ================    ================    ================



* 配置参数
    无
    
* 返回结果

    .. image:: images/sentry2_vision_qrcode_running.png

    该算法返回结果包含两种信息，第一组结果为属性信息，后续结果为字符数据，每组结果包含5个字符

    **属性信息**

    ================    ================================
    结果                 含义
    ================    ================================
    1                   二维码中心x坐标
    2                   二维码中心y坐标
    3                   二维码宽度w
    4                   二维码高度h
    5                   二维码字符数量
    ================    ================================

    **字符数据**

    ================    ================================
    结果                 含义
    ================    ================================
    1                   字符1编码
    2                   字符2编码
    3                   字符3编码
    4                   字符4编码
    5                   字符5编码
    ================    ================================

* 应用案例
    1. 二维码算法基础操作
    2. 二维码物体识别
    3. 二维码指令识别
    4. 二维码距离判断
    5. 二维码支付系统
    6. 二维码共享系统
    7. 智能仓储系统
    8. 智慧物流系统
    9. 智慧城市系统

ID:11 运动物体检测-Motion
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

* 算法简介

    .. image:: images/sentry2_vision_motion_selecting.png

    在摄像头静止状态下，通过对比相邻帧的像素差异，来判断图像中是否有发生变化的区域，如果有则认为该区域有运动物体，返回这个区域的坐标信息。
    该算法目前只能返回一个检测结果。

* 配置参数
    无

* 返回结果

    .. image:: images/sentry2_vision_motion_running.png

    当通过主控读取寄存器时，将会返回以下的数据：

    ================    ================================
    结果                 含义
    ================    ================================
    1                   运动区域中心x坐标
    2                   运动区域中心y坐标
    3                   运动区域宽度w
    4                   运动区域高度h
    5                   无
    ================    ================================

* 应用案例
    1. 运动物体算法基础操作
    2. 非法入侵检测
    3. 任意物体跟踪
    4. 高空抛物检测
    5. 手势方向检测
    6. 生产线计数器
    7. 智能待机唤醒
    8. 物流包裹检测


//end